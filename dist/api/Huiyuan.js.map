{"version":3,"sources":["../../src/api/Huiyuan.js"],"names":["config","db","api","all","req","res","pwd","query","password","HuiyuanModel","findOne","where","yonghuming","username","mima","userinfo","toRes","session","token","jwt","sign","id","dataValues","role","loginUserColumn","tableName","jwtSecret","expiresIn","console","log","destroy","post","Object","keys","body","forEach","item","create","undefined","decode","headers","record","update","get","page","parseInt","limit","sort","order","indexOf","Op","like","eq","xingming","xingbie","touxiang","shouji","shenfenzheng","findAndCountAll","offset","result","currPage","pageSize","in","params","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Huiyuan.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport HuiyuanModel from '../models/HuiyuanModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\t// 用户登录接口\r\n\tapi.all('/login', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet pwd = req.query.password\r\n\t\t\tlet userinfo = await HuiyuanModel.findOne({ where: { yonghuming: req.query.username, mima: pwd } })\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '用户名或密码错误！')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst token = jwt.sign(\r\n\t\t\t\t{\r\n\t\t\t\t\tid: userinfo.dataValues.id,\r\n\t\t\t\t\tusername: userinfo.dataValues.yonghuming,\r\n\t\t\t\t\trole: '会员',\r\n\t\t\t\t\tloginUserColumn: 'yonghuming',\r\n\t\t\t\t\ttableName: 'huiyuan'\r\n\t\t\t\t},\r\n\t\t\t\tconfig.jwtSecret,\r\n\t\t\t\t{\r\n\t\t\t\t\texpiresIn: 60 * 60 * 24 * 1\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tuserinfo.dataValues.token = token\r\n\t\t\tuserinfo.dataValues.role = '会员'\r\n\t\t\tuserinfo.dataValues.loginUserColumn = 'yonghuming'\r\n\t\t\tuserinfo.dataValues.tableName = 'huiyuan'\r\n\t\t\tdelete userinfo.dataValues.mima\r\n\t\t\treq.session.userinfo = userinfo\r\n\r\n\t\t\ttoRes.session(res, 0, '登录成功！', token)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 用户退出接口\r\n\tapi.all('/logout', (req, res) => {\r\n\r\n\t\treq.session.destroy(err => {\r\n\t\t\ttoRes.session(res, 0, '退出成功！')\r\n\t\t})\r\n\t})\r\n\r\n\t// 注册接口\r\n\tapi.post('/register', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item => {\r\n\t\t\t\tif (req.body[item] == '') delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await HuiyuanModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '注册失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '注册成功！')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, -2, '请检查是否正确输入或用户名重复！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取session接口\r\n\tapi.all('/session', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\ttoRes.record(res, 0, await HuiyuanModel.findOne({ where: { id: req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id } }))\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 忘记密码（找回密码）\r\n\tapi.all('/resetPass', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet pwd = '123456'\r\n\r\n\t\t\tawait HuiyuanModel.update({\r\n\t\t\t\tmima: pwd\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tyonghuming: req.query.username\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '密码已重置为：123456')\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet yonghuming = req.query.yonghuming\r\n\t\t\tif (yonghuming) {\r\n\r\n\t\t\t\tif (yonghuming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t\t[Op.like]: yonghuming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet mima = req.query.mima\r\n\t\t\tif (mima) {\r\n\r\n\t\t\t\tif (mima.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.like]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.eq]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xingming = req.query.xingming\r\n\t\t\tif (xingming) {\r\n\r\n\t\t\t\tif (xingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xingming = {\r\n\t\t\t\t\t\t[Op.like]: xingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xingming = {\r\n\t\t\t\t\t\t[Op.eq]: xingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xingbie = req.query.xingbie\r\n\t\t\tif (xingbie) {\r\n\r\n\t\t\t\tif (xingbie.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xingbie = {\r\n\t\t\t\t\t\t[Op.like]: xingbie\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xingbie = {\r\n\t\t\t\t\t\t[Op.eq]: xingbie\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet touxiang = req.query.touxiang\r\n\t\t\tif (touxiang) {\r\n\r\n\t\t\t\tif (touxiang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.touxiang = {\r\n\t\t\t\t\t\t[Op.like]: touxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.touxiang = {\r\n\t\t\t\t\t\t[Op.eq]: touxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shouji = req.query.shouji\r\n\t\t\tif (shouji) {\r\n\r\n\t\t\t\tif (shouji.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shouji = {\r\n\t\t\t\t\t\t[Op.like]: shouji\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shouji = {\r\n\t\t\t\t\t\t[Op.eq]: shouji\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shenfenzheng = req.query.shenfenzheng\r\n\t\t\tif (shenfenzheng) {\r\n\r\n\t\t\t\tif (shenfenzheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shenfenzheng = {\r\n\t\t\t\t\t\t[Op.like]: shenfenzheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shenfenzheng = {\r\n\t\t\t\t\t\t[Op.eq]: shenfenzheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await HuiyuanModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet yonghuming = req.query.yonghuming\r\n\t\t\tif (yonghuming) {\r\n\r\n\t\t\t\tif (yonghuming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t\t[Op.like]: yonghuming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xingming = req.query.xingming\r\n\t\t\tif (xingming) {\r\n\r\n\t\t\t\tif (xingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xingming = {\r\n\t\t\t\t\t\t[Op.like]: xingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xingming = {\r\n\t\t\t\t\t\t[Op.eq]: xingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await HuiyuanModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item => {\r\n\t\t\t\tif (req.body[item] == '') delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await HuiyuanModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item => {\r\n\t\t\t\tif (req.body[item] == '') delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await HuiyuanModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait HuiyuanModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait HuiyuanModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: {\r\n\t\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await HuiyuanModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await HuiyuanModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM huiyuan WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM huiyuan WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM huiyuan WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM huiyuan WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM huiyuan WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM huiyuan WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"huiyuan\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM huiyuan \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\"\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"huiyuan\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"huiyuan\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM huiyuan \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"huiyuan\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"huiyuan\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tif (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n\t\t\t\tif (timeStatType == \"日\")\r\n\t\t\t\t\tsql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n\t\t\t\tif (timeStatType == \"月\")\r\n\t\t\t\t\tsql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n\t\t\t\tif (timeStatType == \"年\")\r\n\t\t\t\t\tsql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n\t\t\t} else {\r\n\t\t\t\tif (timeStatType == \"日\")\r\n\t\t\t\t\tsql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n\t\t\t\tif (timeStatType == \"月\")\r\n\t\t\t\t\tsql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n\t\t\t\tif (timeStatType == \"年\")\r\n\t\t\t\t\tsql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n\t\t\t}\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch (err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}