{"version":3,"sources":["../../src/api/Fangjianxinxi.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","fangjianmingcheng","indexOf","Op","like","eq","fangjianlouceng","fangjianleixing","fangjiantupian","fangjiansheshi","fangjianjiage","fangjianzhuangtai","dingfangdianhua","fangjianjieshao","clicktime","FangjianxinxiModel","findAndCountAll","offset","result","currPage","pageSize","toRes","session","post","Object","keys","body","forEach","item","Date","now","format","create","userinfo","jwt","decode","headers","token","update","id","destroy","in","all","params","findOne","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","whereStoreup","userid","tablename","StoreupModel","attributes","storeupList","arr","rows","push","dataValues","inteltype","notIn","result1","concat","total","xColumnName","yColumnName","timeStatType","tableName","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Fangjianxinxi.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport FangjianxinxiModel from '../models/FangjianxinxiModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport StoreupModel from '../models/StoreupModel'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet fangjianmingcheng = req.query.fangjianmingcheng\r\n\t\t\tif (fangjianmingcheng) {\r\n\r\n\t\t\t\tif (fangjianmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianlouceng = req.query.fangjianlouceng\r\n\t\t\tif (fangjianlouceng) {\r\n\r\n\t\t\t\tif (fangjianlouceng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianlouceng = {\r\n\t\t\t\t\t\t[Op.like]: fangjianlouceng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianlouceng = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianlouceng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianleixing = req.query.fangjianleixing\r\n\t\t\tif (fangjianleixing) {\r\n\r\n\t\t\t\tif (fangjianleixing.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t\t\t[Op.like]: fangjianleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjiantupian = req.query.fangjiantupian\r\n\t\t\tif (fangjiantupian) {\r\n\r\n\t\t\t\tif (fangjiantupian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjiantupian = {\r\n\t\t\t\t\t\t[Op.like]: fangjiantupian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjiantupian = {\r\n\t\t\t\t\t\t[Op.eq]: fangjiantupian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjiansheshi = req.query.fangjiansheshi\r\n\t\t\tif (fangjiansheshi) {\r\n\r\n\t\t\t\tif (fangjiansheshi.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjiansheshi = {\r\n\t\t\t\t\t\t[Op.like]: fangjiansheshi\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjiansheshi = {\r\n\t\t\t\t\t\t[Op.eq]: fangjiansheshi\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianjiage = req.query.fangjianjiage\r\n\t\t\tif (fangjianjiage) {\r\n\r\n\t\t\t\tif (fangjianjiage.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianjiage = {\r\n\t\t\t\t\t\t[Op.like]: fangjianjiage\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianjiage = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianjiage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianzhuangtai = req.query.fangjianzhuangtai\r\n\t\t\tif (fangjianzhuangtai) {\r\n\r\n\t\t\t\tif (fangjianzhuangtai.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianzhuangtai = {\r\n\t\t\t\t\t\t[Op.like]: fangjianzhuangtai\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianzhuangtai = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianzhuangtai\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet dingfangdianhua = req.query.dingfangdianhua\r\n\t\t\tif (dingfangdianhua) {\r\n\r\n\t\t\t\tif (dingfangdianhua.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.dingfangdianhua = {\r\n\t\t\t\t\t\t[Op.like]: dingfangdianhua\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.dingfangdianhua = {\r\n\t\t\t\t\t\t[Op.eq]: dingfangdianhua\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianjieshao = req.query.fangjianjieshao\r\n\t\t\tif (fangjianjieshao) {\r\n\r\n\t\t\t\tif (fangjianjieshao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianjieshao = {\r\n\t\t\t\t\t\t[Op.like]: fangjianjieshao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianjieshao = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianjieshao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet clicktime = req.query.clicktime\r\n\t\t\tif (clicktime) {\r\n\r\n\t\t\t\tif (clicktime.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.clicktime = {\r\n\t\t\t\t\t\t[Op.like]: clicktime\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.clicktime = {\r\n\t\t\t\t\t\t[Op.eq]: clicktime\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await FangjianxinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet fangjianmingcheng = req.query.fangjianmingcheng\r\n\t\t\tif (fangjianmingcheng) {\r\n\r\n\t\t\t\tif (fangjianmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianleixing = req.query.fangjianleixing\r\n\t\t\tif (fangjianleixing) {\r\n\r\n\t\t\t\tif (fangjianleixing.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t\t\t[Op.like]: fangjianleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianzhuangtai = req.query.fangjianzhuangtai\r\n\t\t\tif (fangjianzhuangtai) {\r\n\r\n\t\t\t\tif (fangjianzhuangtai.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianzhuangtai = {\r\n\t\t\t\t\t\t[Op.like]: fangjianzhuangtai\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianzhuangtai = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianzhuangtai\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await FangjianxinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\treq.body.clicktime = moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n\r\n\t\t\tconst userinfo = await FangjianxinxiModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\t\t\treq.body.clicktime = moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n\r\n\t\t\tconst userinfo = await FangjianxinxiModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait FangjianxinxiModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait FangjianxinxiModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n            await FangjianxinxiModel.update({\r\n\t\t\t\tclicktime: moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.params.id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.record(res, 0, await FangjianxinxiModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n            await FangjianxinxiModel.update({\r\n\t\t\t\tclicktime: moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.params.id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.record(res, 0, await FangjianxinxiModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM fangjianxinxi WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM fangjianxinxi WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM fangjianxinxi WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM fangjianxinxi WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM fangjianxinxi WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM fangjianxinxi WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\t// 智能推荐接口\r\n\tapi.get('/autoSort', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 5\r\n\t\t\tlet sort = req.query.sort || 'clicktime'\r\n\t\t\tlet order = req.query.order || 'desc'\r\n\r\n\r\n\t\t\tlet result = await FangjianxinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 智能推荐接口\r\n\tapi.get('/autoSort2', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 5\r\n\r\n\t\t\tlet whereStoreup = {}\r\n\t\t\twhereStoreup.userid = {\r\n\t\t\t\t[Op.eq]: jwt.decode(req.headers.token).id\r\n\t\t\t}\r\n\t\t\twhereStoreup.tablename = {\r\n\t\t\t\t[Op.eq]: 'fangjianxinxi'\r\n\t\t\t}\r\n\t\t\tlet storeupList = await StoreupModel.findAndCountAll({\r\n\t\t\t\tattributes: ['inteltype'],\r\n\t\t\t\torder: [['addtime', 'desc']],\r\n\t\t\t\twhere: whereStoreup,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tlet arr = []\r\n\t\t\tstoreupList.rows.forEach(item => {\r\n\t\t\t\tarr.push(item.dataValues.inteltype)\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tlet where = {}\r\n\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t[Op.in]: arr,\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await FangjianxinxiModel.findAndCountAll({\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\twhere = {}\r\n\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t[Op.notIn]: arr,\r\n\t\t\t}\r\n\r\n\t\t\tlet result1 = await FangjianxinxiModel.findAndCountAll({\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit: limit - result.count\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.rows = result.rows.concat(result1.rows)\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\t\t\tresult.total = result.count + result1.count\r\n\t\t\tresult.count = result.total \r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"fangjianxinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM fangjianxinxi \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"fangjianxinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"fangjianxinxi\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM fangjianxinxi \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"fangjianxinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"fangjianxinxi\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}