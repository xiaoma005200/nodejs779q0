{"version":3,"sources":["../../src/api/Yudingjilu.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","yudingdanhao","indexOf","Op","like","eq","fangjianmingcheng","fangjianleixing","fangjiantupian","fangjianjiage","yudingriqi","ruzhushijian","ruzhurenshu","ruzhutianshu","dingdanjine","yonghuming","xingming","shouji","shenfenzheng","shhf","ispay","tableName","session","userinfo","undefined","jwt","decode","headers","token","username","userid","YudingjiluModel","findAndCountAll","offset","result","currPage","pageSize","toRes","post","Object","keys","body","forEach","item","create","update","id","destroy","in","all","findOne","params","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","role","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Yudingjilu.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport YudingjiluModel from '../models/YudingjiluModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet yudingdanhao = req.query.yudingdanhao\r\n\t\t\tif (yudingdanhao) {\r\n\r\n\t\t\t\tif (yudingdanhao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yudingdanhao = {\r\n\t\t\t\t\t\t[Op.like]: yudingdanhao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yudingdanhao = {\r\n\t\t\t\t\t\t[Op.eq]: yudingdanhao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianmingcheng = req.query.fangjianmingcheng\r\n\t\t\tif (fangjianmingcheng) {\r\n\r\n\t\t\t\tif (fangjianmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianleixing = req.query.fangjianleixing\r\n\t\t\tif (fangjianleixing) {\r\n\r\n\t\t\t\tif (fangjianleixing.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t\t\t[Op.like]: fangjianleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianleixing = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjiantupian = req.query.fangjiantupian\r\n\t\t\tif (fangjiantupian) {\r\n\r\n\t\t\t\tif (fangjiantupian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjiantupian = {\r\n\t\t\t\t\t\t[Op.like]: fangjiantupian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjiantupian = {\r\n\t\t\t\t\t\t[Op.eq]: fangjiantupian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianjiage = req.query.fangjianjiage\r\n\t\t\tif (fangjianjiage) {\r\n\r\n\t\t\t\tif (fangjianjiage.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianjiage = {\r\n\t\t\t\t\t\t[Op.like]: fangjianjiage\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianjiage = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianjiage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yudingriqi = req.query.yudingriqi\r\n\t\t\tif (yudingriqi) {\r\n\r\n\t\t\t\tif (yudingriqi.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yudingriqi = {\r\n\t\t\t\t\t\t[Op.like]: yudingriqi\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yudingriqi = {\r\n\t\t\t\t\t\t[Op.eq]: yudingriqi\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ruzhushijian = req.query.ruzhushijian\r\n\t\t\tif (ruzhushijian) {\r\n\r\n\t\t\t\tif (ruzhushijian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.ruzhushijian = {\r\n\t\t\t\t\t\t[Op.like]: ruzhushijian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.ruzhushijian = {\r\n\t\t\t\t\t\t[Op.eq]: ruzhushijian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ruzhurenshu = req.query.ruzhurenshu\r\n\t\t\tif (ruzhurenshu) {\r\n\r\n\t\t\t\tif (ruzhurenshu.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.ruzhurenshu = {\r\n\t\t\t\t\t\t[Op.like]: ruzhurenshu\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.ruzhurenshu = {\r\n\t\t\t\t\t\t[Op.eq]: ruzhurenshu\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ruzhutianshu = req.query.ruzhutianshu\r\n\t\t\tif (ruzhutianshu) {\r\n\r\n\t\t\t\tif (ruzhutianshu.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.ruzhutianshu = {\r\n\t\t\t\t\t\t[Op.like]: ruzhutianshu\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.ruzhutianshu = {\r\n\t\t\t\t\t\t[Op.eq]: ruzhutianshu\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet dingdanjine = req.query.dingdanjine\r\n\t\t\tif (dingdanjine) {\r\n\r\n\t\t\t\tif (dingdanjine.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.dingdanjine = {\r\n\t\t\t\t\t\t[Op.like]: dingdanjine\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.dingdanjine = {\r\n\t\t\t\t\t\t[Op.eq]: dingdanjine\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuming = req.query.yonghuming\r\n\t\t\tif (yonghuming) {\r\n\r\n\t\t\t\tif (yonghuming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t\t[Op.like]: yonghuming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xingming = req.query.xingming\r\n\t\t\tif (xingming) {\r\n\r\n\t\t\t\tif (xingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xingming = {\r\n\t\t\t\t\t\t[Op.like]: xingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xingming = {\r\n\t\t\t\t\t\t[Op.eq]: xingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shouji = req.query.shouji\r\n\t\t\tif (shouji) {\r\n\r\n\t\t\t\tif (shouji.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shouji = {\r\n\t\t\t\t\t\t[Op.like]: shouji\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shouji = {\r\n\t\t\t\t\t\t[Op.eq]: shouji\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shenfenzheng = req.query.shenfenzheng\r\n\t\t\tif (shenfenzheng) {\r\n\r\n\t\t\t\tif (shenfenzheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shenfenzheng = {\r\n\t\t\t\t\t\t[Op.like]: shenfenzheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shenfenzheng = {\r\n\t\t\t\t\t\t[Op.eq]: shenfenzheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shhf = req.query.shhf\r\n\t\t\tif (shhf) {\r\n\r\n\t\t\t\tif (shhf.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shhf = {\r\n\t\t\t\t\t\t[Op.like]: shhf\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shhf = {\r\n\t\t\t\t\t\t[Op.eq]: shhf\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ispay = req.query.ispay\r\n\t\t\tif (ispay) {\r\n\r\n\t\t\t\tif (ispay.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.ispay = {\r\n\t\t\t\t\t\t[Op.like]: ispay\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.ispay = {\r\n\t\t\t\t\t\t[Op.eq]: ispay\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// let tableName = req.session.userinfo.tableName\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'huiyuan') {\r\n\t\t\t\twhere.yonghuming = {\r\n\t\t\t\t\t[Op.eq]: req.session.userinfo === undefined ? jwt.decode(req.headers.token).username : req.session.userinfo.yonghuming\r\n\t\t\t\t}\r\n\t\t\t\tif (where['userid'] != undefined) {\r\n\t\t\t\t\tdelete where.userid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await YudingjiluModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet yudingdanhao = req.query.yudingdanhao\r\n\t\t\tif (yudingdanhao) {\r\n\r\n\t\t\t\tif (yudingdanhao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yudingdanhao = {\r\n\t\t\t\t\t\t[Op.like]: yudingdanhao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yudingdanhao = {\r\n\t\t\t\t\t\t[Op.eq]: yudingdanhao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fangjianmingcheng = req.query.fangjianmingcheng\r\n\t\t\tif (fangjianmingcheng) {\r\n\r\n\t\t\t\tif (fangjianmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fangjianmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: fangjianmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await YudingjiluModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await YudingjiluModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await YudingjiluModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait YudingjiluModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait YudingjiluModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await YudingjiluModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await YudingjiluModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM yudingjilu WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM yudingjilu WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yudingjilu WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yudingjilu WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yudingjilu WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yudingjilu WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"yudingjilu\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'huiyuan') {\r\n\t\t\t\twhere += \" AND yonghuming = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM yudingjilu \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"yudingjilu\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'huiyuan') {\r\n\t\t\t\twhere += \" AND yonghuming = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"yudingjilu\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM yudingjilu \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"yudingjilu\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (jwt.decode(req.headers.token).role != '管理员') {\r\n\t\t\t\twhere += \" AND yonghuming = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"yudingjilu\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}